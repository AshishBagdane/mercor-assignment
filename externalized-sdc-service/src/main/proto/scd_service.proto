syntax = "proto3";

package com.mercor.scd.grpc;

option java_multiple_files = true;
option java_package = "com.mercor.scd.grpc";
option java_outer_classname = "SCDServiceProto";

service SCDService {
  // Common SCD operations
  rpc GetLatestVersion (GetLatestVersionRequest) returns (EntityResponse);
  rpc GetVersionHistory (GetVersionHistoryRequest) returns (EntityListResponse);
  rpc Query (QueryRequest) returns (EntityListResponse);
  rpc Update (UpdateRequest) returns (EntityResponse);
  rpc BatchGet (BatchGetRequest) returns (BatchResponse);
  rpc BatchUpdate (BatchUpdateRequest) returns (BatchResponse);
}

// Entity-specific services
service JobService {
  rpc GetActiveJobsForCompany (GetActiveJobsForCompanyRequest) returns (JobListResponse);
  rpc GetActiveJobsForContractor (GetActiveJobsForContractorRequest) returns (JobListResponse);
  rpc GetJobsWithRateAbove (GetJobsWithRateAboveRequest) returns (JobListResponse);
  rpc UpdateStatus (UpdateJobStatusRequest) returns (JobResponse);
  rpc UpdateRate (UpdateJobRateRequest) returns (JobResponse);
}

service TimelogService {
  rpc GetTimelogsForJob (GetTimelogsForJobRequest) returns (TimelogListResponse);
  rpc GetTimelogsForContractor (GetTimelogsForContractorRequest) returns (TimelogListResponse);
  rpc GetTimelogsWithDurationAbove (GetTimelogsWithDurationAboveRequest) returns (TimelogListResponse);
  rpc AdjustTimelog (AdjustTimelogRequest) returns (TimelogResponse);
}

service PaymentLineItemService {
  rpc GetPaymentLineItemsForJob (GetPaymentLineItemsForJobRequest) returns (PaymentLineItemListResponse);
  rpc GetPaymentLineItemsForTimelog (GetPaymentLineItemsForTimelogRequest) returns (PaymentLineItemListResponse);
  rpc GetPaymentLineItemsForContractor (GetPaymentLineItemsForContractorRequest) returns (PaymentLineItemListResponse);
  rpc MarkAsPaid (MarkAsPaidRequest) returns (PaymentLineItemResponse);
  rpc GetTotalAmountForContractor (GetTotalAmountForContractorRequest) returns (TotalAmountResponse);
}

// Common request/response messages
message GetLatestVersionRequest {
  string entity_type = 1;
  string id = 2;
}

message GetVersionHistoryRequest {
  string entity_type = 1;
  string id = 2;
}

message QueryRequest {
  string entity_type = 1;
  map<string, string> conditions = 2;
  bool latest_version_only = 3;
  int32 limit = 4;
  int32 offset = 5;
  string sort_by = 6;
  string sort_direction = 7;
}

message UpdateRequest {
  string entity_type = 1;
  string id = 2;
  map<string, string> fields = 3;
  Entity entity = 4;
}

message BatchGetRequest {
  string entity_type = 1;
  repeated string ids = 2;
}

message BatchUpdateRequest {
  string entity_type = 1;
  repeated Entity entities = 2;
  map<string, string> common_fields = 3;
}

message Entity {
  string type = 1;
  string id = 2;
  int32 version = 3;
  string uid = 4;
  int64 created_at = 5;
  int64 updated_at = 6;
  bytes data = 7; // Serialized entity-specific data
}

message EntityResponse {
  Entity entity = 1;
}

message EntityListResponse {
  repeated Entity entities = 1;
}

message BatchResponse {
  repeated Entity entities = 1;
  map<string, string> errors = 2;
  int32 success_count = 3;
  int32 failure_count = 4;
}

// Job-specific messages
message Job {
  string id = 1;
  int32 version = 2;
  string uid = 3;
  int64 created_at = 4;
  int64 updated_at = 5;
  string status = 6;
  double rate = 7;
  string title = 8;
  string company_id = 9;
  string contractor_id = 10;
}

message GetActiveJobsForCompanyRequest {
  string company_id = 1;
}

message GetActiveJobsForContractorRequest {
  string contractor_id = 1;
}

message GetJobsWithRateAboveRequest {
  double rate = 1;
}

message UpdateJobStatusRequest {
  string id = 1;
  string status = 2;
}

message UpdateJobRateRequest {
  string id = 1;
  double rate = 2;
}

message JobResponse {
  Job job = 1;
}

message JobListResponse {
  repeated Job jobs = 1;
}

// Timelog-specific messages
message Timelog {
  string id = 1;
  int32 version = 2;
  string uid = 3;
  int64 created_at = 4;
  int64 updated_at = 5;
  int64 duration = 6;
  int64 time_start = 7;
  int64 time_end = 8;
  string type = 9;
  string job_uid = 10;
}

message GetTimelogsForJobRequest {
  string job_uid = 1;
}

message GetTimelogsForContractorRequest {
  string contractor_id = 1;
  int64 start_time = 2;
  int64 end_time = 3;
}

message GetTimelogsWithDurationAboveRequest {
  int64 duration = 1;
}

message AdjustTimelogRequest {
  string id = 1;
  int64 adjusted_duration = 2;
}

message TimelogResponse {
  Timelog timelog = 1;
}

message TimelogListResponse {
  repeated Timelog timelogs = 1;
}

// PaymentLineItem-specific messages
message PaymentLineItem {
  string id = 1;
  int32 version = 2;
  string uid = 3;
  int64 created_at = 4;
  int64 updated_at = 5;
  string job_uid = 6;
  string timelog_uid = 7;
  double amount = 8;
  string status = 9;
}

message GetPaymentLineItemsForJobRequest {
  string job_uid = 1;
}

message GetPaymentLineItemsForTimelogRequest {
  string timelog_uid = 1;
}

message GetPaymentLineItemsForContractorRequest {
  string contractor_id = 1;
  int64 start_time = 2;
  int64 end_time = 3;
}

message MarkAsPaidRequest {
  string id = 1;
}

message GetTotalAmountForContractorRequest {
  string contractor_id = 1;
  int64 start_time = 2;
  int64 end_time = 3;
}

message TotalAmountResponse {
  double total_amount = 1;
}

message PaymentLineItemResponse {
  PaymentLineItem payment_line_item = 1;
}

message PaymentLineItemListResponse {
  repeated PaymentLineItem payment_line_items = 1;
}