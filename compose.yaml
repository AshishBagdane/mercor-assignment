services:
  postgres:
    image: ${POSTGRES_IMAGE:-postgres:latest}
    environment:
      POSTGRES_DB: ${DB_NAME:-employment}
      POSTGRES_USER: ${DB_USERNAME:-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    restart: unless-stopped
    volumes:
      - ${POSTGRES_DATA_PATH:-postgres_data}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-user} -d ${DB_NAME:-employment}"]
      interval: ${PG_HEALTHCHECK_INTERVAL:-10s}
      timeout: ${PG_HEALTHCHECK_TIMEOUT:-5s}
      retries: ${PG_HEALTHCHECK_RETRIES:-5}
    networks:
      - ${NETWORK_NAME:-sdc-network}

  redis-stack:
    image: ${REDIS_IMAGE:-redis/redis-stack:latest}
    container_name: ${REDIS_CONTAINER_NAME:-redis-stack}
    ports:
      - "${REDIS_PORT:-6379}:6379"
      - "${REDIS_UI_PORT:-8001}:8001"
    restart: unless-stopped
    volumes:
      - ${REDIS_DATA_PATH:-redis_data}:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: ${REDIS_HEALTHCHECK_INTERVAL:-10s}
      timeout: ${REDIS_HEALTHCHECK_TIMEOUT:-5s}
      retries: ${REDIS_HEALTHCHECK_RETRIES:-5}
    networks:
      - ${NETWORK_NAME:-sdc-network}

volumes:
  postgres_data:
    name: ${POSTGRES_VOLUME_NAME:-postgres_data}
  redis_data:
    name: ${REDIS_VOLUME_NAME:-redis_data}

networks:
  sdc-network:
    name: ${NETWORK_NAME:-sdc-network}
    driver: bridge
